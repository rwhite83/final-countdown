script.
    function time_processor(div) {
    let node_list = div.childNodes;
    var count_down_date = new Date(node_list[2].innerHTML);
    let processed_count_down_date = time_zone_corrector(count_down_date);
    var x = setInterval(function () {
    let now = new Date();
    let distance = new Date(processed_count_down_date - now);
    //- console.log('then: ' + count_down_date + ' now: ' + now + ' distance: ' + distance)
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    //- console.log('days: ' + days + ' hours ' + hours + ' minutes ' + minutes + ' seconds: ' + seconds)
    var formattedDays = ("0" + days).slice(-2);
    var formattedHours = ("0" + hours).slice(-2);
    var formattedMinutes = ("0" + minutes).slice(-2);
    var formattedSeconds = ("0" + seconds).slice(-2);
    //- console.log('formatted** days: ' + formattedDays + ' hours ' + formattedHours + ' minutes ' + formattedMinutes + ' seconds: ' + formattedSeconds)
    node_list[1].innerHTML = formattedDays + ":" + formattedHours + ":"
    + formattedMinutes + ":" + formattedSeconds;
    if (distance < 0) {
    clearInterval(x);
    node_list[1].innerHTML = "Good Luck!";
    }
    }, 1000);
    }
    
script.
    function time_zone_corrector(target) {
    var targetDate = new Date(target)
    let correction = targetDate.getTimezoneOffset()
    targetDate.setMinutes(targetDate.getMinutes() + targetDate.getTimezoneOffset())
    return targetDate;
    }
    
script.
    let dates_div = document.getElementById('dates_div');
    let node_list = dates_div.childNodes;
    for (node of node_list) {
    sub_node_list = node.childNodes;
    time_processor(node);
    }

script.
    function toggle_new_task() {
    let new_task_div = document.getElementById('new_task_div')
    if (new_task_div.style.display != "inline") {
    new_task_div.style.display = "inline";
    } else {
    new_task_div.style.display = "none";
    }
    }

script.
    function play_the_sound() {
    let audio_elem = document.getElementById("my_audio");
    if (audio_elem.paused) {
    audio_elem.play();
    } else {
    audio_elem.pause();
    audio_elem.currentTime = 0;
    }
    }

script.
    function delete_entry(button) {
    console.log(button.parentNode)   
    let entry_name = button.parentNode.lastChild.innerText;   
    console.log(entry_name);   
    fetch('/entries/delete_entry', {
    method: "POST",
    redirect: 'follow',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ "message": entry_name })

    })
        .then(response => {
        location.reload();
    }) 
    }